@font-face {
    font-family: 'National Park';
    src: url('./NationalPark-VariableFont_wght.ttf') format('truetype');
}

#root {
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
    font-family: 'National Park', sans-serif;
}

.App {
    width: 100%;
    height: 100%;
}

.mainCanvas {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
}

.objectCanvas {
    width: 180px;
    height: 180px;
    box-sizing: border-box;
}

.video {
    object-fit: cover;
    width: 100%;
    height: 100%;
}

.overlay {
    font-weight: bold;
    position: fixed;
    top: 50px;
    left: 50px;
    z-index: 10;
    color: white;
    display: flex;
}

.mainTitle {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 50px;
    text-align: center;
    color: white;
    user-select: none;
    z-index: 10;
    pointer-events: none;
}

.fullWidthCenteredRow {
    display: flex;
    justify-content: center;
    width: 100%;
    transition: all 0.2s;
}

.fullWidthCenteredRow:hover {
    transform: scale(1.01);
}

.wideCanvasContainer {
    width: 90vw;
    height: calc(100vh / 3);
    border-radius: 30px;
    overflow: hidden;
    position: relative;
}

.wideCanvas {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
}

.horizontalMotionDivsContainer {
    position: relative;
    width: 90vw;
    margin: 0 auto;
    height: calc(100vh / 2);
    margin-top: calc(100vh / 4.5);
    display: flex;
}

.horizontalMotionDiv {
    position: absolute;
    height: 100%;
    padding: 0 20px;
    box-sizing: border-box;
}

.horizontalMotionDivInner {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    border-radius: 30px;
    background-color: peachpuff;
    transition: all 0.2s;
    padding: 10px;
    box-sizing: border-box;
}

.horizontalMotionDivInner:hover {
    transform: scale(1.02);
}

.horizontalMotionDivInner:hover > .horizontalMotionDivImage {
    margin-top: 0;
}

.horizontalMotionDivImage {
    background-size: cover;
    background-position: center;
    border-radius: 24px;
    width: 100%;
    height: 66%;
    box-sizing: border-box;
    margin-top: 16.3vh;
    transition: all ease-in-out 0.2s;
}

.horizontalMotionDivTextContainer {
    position: absolute;
    top: 0;
    left: 0;
    padding-left: 40px;
    padding-right: 10px;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    font-size: 2.1vh;
    font-weight: 100;
    box-sizing: border-box;
}

.horizontalMotionDivTextContainer > h1 {
    margin: 0;
    font-weight: bold;
    line-height: 7vh;
}

.moveDownTextContainer {
    width: 100%;
    display: flex;
    justify-content: center;
}

.textContainer {
    position: absolute;
    top: 0;
    left: 0;
    max-width: 700px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-left: 50px;
    font-size: 2.1vh;
    font-weight: 100;
}

.textContainer > h1 {
    margin: 0;
    font-weight: bold;
    line-height: 7vh;
}

.button {
    position: relative;
    font-weight: bold;
    color: white;
    box-sizing: border-box;
    border: 1px solid transparent;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 8px;
    border-radius: 30px;
    padding: 10px 0;
    text-align: center;
    cursor: pointer;
    user-select: none;
    overflow: hidden;
    animation: fall 0.5s forwards;
    min-width: 60px;
    height: 60px;
    transition: all ease-out 0.1s;
}

.button:hover {
    animation: rise 0.5s forwards;
    color: 'black';
    border: 1px solid white;
    transform: scale(1.2);
}

.button:not(:hover) > .buttonHoverCircle {
    display: none;
}

.buttonHoverCircle {
    display: none;
    position: absolute;
    background-color: white;
    border-radius: 100%;
    width: 220%;
    transition: all 0.5s;
    animation: buttonHoverCircle 0.4s forwards;
    z-index: -1;
    aspect-ratio: 1 / 1;
}

.buttonText {
    mix-blend-mode: difference;
}

@keyframes buttonHoverCircle {
    0% {
        transform: translate(-50%, -50%) scale(0);
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
    }
}